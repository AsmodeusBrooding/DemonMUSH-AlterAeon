<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Wednesday, January 02, 2019, 11:29 PM -->
<!-- MuClient version 5.06-pre -->
  
<!-- Plugin "Aeon_Demon_Talk" generated by Plugin Wizard -->
<!-- Designed by Demon for Alter Aeon to catch channel sends and send them to the Chat Window -->
  
<muclient>
<plugin
   name="DemonMUSH_CommCatcher"
   id="84164fd114202591729cb50c"
   language="Lua"
   purpose="move messages from main window to comm log"
   save_state="y"
   date_written="2019-01-02 23:28:32"
   requires="5.06"
   version="1.0"
   >
  
</plugin>
  
  
<!--  Get our standard constants -->
  
<include name="constants.lua"/>

<!--  Variables  -->

<variables>
    <variable name="tells_tab">1</variable>
    <variable name="auction_tab">1</variable>
    <variable name="clantell_tab">1</variable>
    <variable name="grouptell_tab">1</variable>
    <variable name="regularchan_tab">1</variable>
    <variable name="circlechan_tab">1</variable>
    <variable name="friends_tab">1</variable>
    <variable name="says_tab">1</variable>
    <variable name="notifies_tab">1</variable>
    <variable name="replay_tab">1</variable>
</variables>

<!--  Aliases  -->

<aliases>
<alias
	name="comm_checker"
	sequence="100"
	match="commCheck"
	enabled="y"
	send_to="12"
	ignore_case="y"><send>
	purplewhitePrint("***^._.^*** | DemonMUSH Channel List  : ------------------------------- | ***^._.^***")
	print("            | Tells             :          ",GetVariable("tells_tab"))
	print("            | Auction           :          ",GetVariable("auction_tab"))
	print("            | ClanTell          :          ",GetVariable("clantell_tab"))
	print("            | GroupTell         :          ",GetVariable("grouptell_tab"))
	print("            | Regular Chan      :          ",GetVariable("regularchan_tab"))
	print("            | Circle Chan       :          ",GetVariable("circlechan_tab"))
	print("            | Friends           :          ",GetVariable("friends_tab"))
	print("            | Says              :          ",GetVariable("says_tab"))
	print("            | Notifies          :          ",GetVariable("notifies_tab"))
	print("            | Replay            :          ",GetVariable("replay_tab"))
	purplewhitePrint("***^._.^*** | --------------------------------------------------------- | ***^._.^***")</send></alias>
<alias enabled="y"
    name="tell_settab"
    sequence="100"
    match="set tells tab *"
    send_to="9"
    variable="tells_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="grouptell_settab"
    sequence="100"
    match="set grouptell tab *"
    send_to="9"
    variable="grouptell_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="auction_settab"
    sequence="100"
    match="set auction tab *"
    send_to="9"
    variable="auction_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="clantell_settab"
    sequence="100"
    match="set clantell tab *"
    send_to="9"
    variable="clantell_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="says_settab"
    sequence="100"
    match="set says tab *"
    send_to="9"
    variable="says_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="regularchan_settab"
    sequence="100"
    match="set regularchan tab *"
    send_to="9"
    variable="regularchan_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="circlechan_settab"
    sequence="100"
    match="set circlechan tab *"
    send_to="9"
    variable="circlechan_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="friends_settab"
    sequence="100"
    match="set friends tab *"
    send_to="9"
    variable="friends_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>
<alias enabled="y"
    name="notifies_settab"
    sequence="100"
    match="set notifies tab *"
    send_to="9"
    variable="notifies_tab"
    regexp="n"
    ignore_case="y"><send>%1</send></alias>


<alias 
    enabled="y"
    sequence="100"
    match="replay *"
    send_to="12"
    regexp="n"
    ignore_case="n">
<send>Execute ("repla %1 -t | prefix ~R~H[~YReplay~R] ~O")</send>
</alias>
<alias 
    enabled="y"
    sequence="100"
    match="replay"
    send_to="12"
    regexp="n"
    ignore_case="n">
<send>Execute ("repla -t | prefix ~R~H[~YReplay~R] ~O")</send>
</alias>


</aliases>

<!--  Triggers  -->

<triggers>
<trigger
   enabled="y"
   name="get_tell"
   match="* tells you, '*'"
   script="tells"
keep_evaluating="y"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="friends"
   match="(friend) * posted: *"
   script="friends"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="friendsevent"
   match="(friend) * *!"
   script="friends"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="friendsquest"
   match="(friend) * *."
   script="friends"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   match="Dentin tells you, 'version'"
   omit_from_output="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  </trigger>
<trigger
   enabled="y"
   match="Soth tells you, 'version'"
   omit_from_output="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  </trigger>
<trigger
   enabled="y"
   match="A terrible winged Demon tells you, 'version'"
   omit_from_output="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  </trigger>
<trigger
   enabled="y"
   match="[*] You reply to *, 'DemonMUSH *'"
   omit_from_output="y"
   omit_from_log="y"
   regexp="n"
   send_to="14"
   sequence="100"
  >
  </trigger>
<trigger
   enabled="y"
   name="friendslog"
   match="(friend) * has * the game."
   script="friends"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="replay"
   match="[Replay] (* * ago) *"
   script="replay"
   sequence="100"
   omit_from_output="n">
</trigger>

<trigger
   enabled="y"
   name="send_tell"
   match="\You tell ([a-zA-Z]+)\, '(.+)'$"
   regexp="y"
   script="tells"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_reply"
   match="* replies to you, '*'"
   script="tells"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_clan"
   match="You tell the clan, '*'"
   script="clantell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_clan"
   match="* tells the clan, '*'"
   script="clantell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_elder"
   match="* tells the elders, '*'"
   script="clantell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_elder"
   match="You tell the elders, '*'"
   script="clantell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_grouptell"
   match="* tells the group, '*'"
   script="grouptell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_grouptell"
   match="You tell the group, '*'"
   script="grouptell"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_reply"
   match="You reply to *, '*'"
   script="tells"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_auction"
   match="* auctions, '*'"
   script="auction"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_auction"
   match="You auction, '*'"
   script="auction"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="send_says"
   match="You say, '*'"
   script="says"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
   enabled="y"
   name="get_says"
   match="* says, '*'"
   script="says"
   sequence="100"
   omit_from_output="n">
</trigger>
<trigger
    enabled="y"
	name="regularchan"
    match="\[([a-zA-Z]+)\] ([a-zA-Z ]+)\: (.+)$"
    script="regularchan"
    regexp="y"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="[]* *s, '*'"
    script="regularchan"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="[]You *, '*'"
    script="regularchan"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="[]* *: *"
    script="regularchan"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="xaud[demonauc] *: *"
    script="regularchan"
    regexp="n"
    omit_from_output="y"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="Double mob experience is now enabled!"
    script="notifies"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="(notify) * * (freak *!)"
    script="notifies"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="(notify) * *, freak *!"
    script="notifies"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>
<trigger
    enabled="y"
    match="Double experience caps for mob kills are now enabled!"
    script="notifies"
    regexp="n"
    omit_from_output="n"
    sequence="100">
</trigger>

</triggers>

<!--  Script  -->

<script>
<![CDATA[

-----------------------------------------------------------------------------------------------------
--    <variable name="tells_tab">1</variable>
--    <variable name="auction_tab">1</variable>
--    <variable name="clantell_tab">1</variable>
--    <variable name="grouptell_tab">1</variable>
--    <variable name="regularchan_tab">1</variable>
--    <variable name="circlechan_tab">1</variable>
--    <variable name="notifies_tab">1</variable>
--    <variable name="replay_tab">1</variable>
-----------------------------------------------------------------------------------------------------


dofile(GetPluginInfo(GetPluginID(), 20) .. "plugin_colors.lua")
  
function tells (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("tells_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info

function friends (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("friends_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info
 
function clantell (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("clantell_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info
 
function grouptell (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("grouptell_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info
 
function auction (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("auction_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info
 
function regularchan (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("regularchan_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info

function circlechan (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("circlechan_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info

function says (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("says_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info

function notifies (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("notifies_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "[" .. os.date("%b %d, %H:%M:%S") .. "] " .. StylesToColours(styles), tab)
end -- untagged info
function replay (name, line, wildcards, styles)
    -- print ("name = " .. name)
    tab = GetVariable("replay_tab") or "1"
   a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", "@R[@Y" .. os.date("%b %d, %H:%M:%S") .. "@R] " .. StylesToColours(styles), tab)
   -- a, b = CallPlugin("b555825a4a5700c35fa80780", "storeFromOutside", StylesToColours(styles), tab) -- this is for NO TIMESTAMPS 
end -- untagged info

function purplewhitePrint(msg)
	ColourNote("white","indigo",msg)
end -- purplewhitePrint
function purpleblackPrint(msg)
	ColourNote("indigo","black",msg)
end -- purpleblackPrint

]]>
</script>
</muclient>