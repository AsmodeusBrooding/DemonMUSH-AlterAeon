<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Tuesday, January 08, 2008, 3:26  -->
<!-- MuClient version 4.20 -->

<!-- Plugin "Count_Mobs_Killed" generated by Plugin Wizard -->

<muclient>
<plugin
   name="DemonMUSH_MobKill_Counter"
   author="Nick Gammon"
   id="f11e3bb0e48d526152798439"
   language="Lua"
   purpose="Counts how many mobs I have killed"
   save_state="y"
   date_written="2008-01-08 15:17:18"
   requires="4.00"
   version="1.0"
   >
<description trim="y">
<![CDATA[
Counts how many mobs have been killed.

Type "show_killed" to see a count.
]]>
</description>

</plugin>


<!--  Triggers  -->

<triggers>
  <trigger
   custom_colour="2"
   enabled="y"
   match="kxwt_mdeath *"
   send_to="12"
   sequence="100"
  >
  <send>killed_mobs = killed_mobs or {}  -- make mobs table

mob_name = "%1"  -- this mob's name (first wildcard)

-- add this mob if first time

killed_mobs [mob_name] = killed_mobs [mob_name] or { count = 0 }

-- add 1 to count of mobs
killed_mobs [mob_name].count = killed_mobs [mob_name].count + 1

-- remember when we last killed it
killed_mobs [mob_name].last_time = os.time ()

</send>
  </trigger>
</triggers>

<!--  Aliases  -->

<aliases>
  <alias
   match="show kills"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>if not killed_mobs or next (killed_mobs) == nil then
  ColourNote ("white", "indigo", "No mobs killed yet")
  return
end -- if nothing

-- go through each one

count = 0
for k, v in pairs (killed_mobs) do
  Note (string.format ("%%-30s x %%i (last at %%s)",
        k, 
        v.count,
        os.date ("%%H:%%M %%d %%b %%Y", v.last_time)))
  count = count + v.count
end -- for loop

-- show total

Note (string.format ("%%5i mobs killed.", count))</send>
  </alias>

  <alias
   match="reset kills"
   enabled="y"
   send_to="12"
   sequence="100"
  >
  <send>

killed_mobs =  {}  -- clear mobs table
ColourNote("white", "indigo", "Mob Kills reset back to 0.")
</send>
  </alias>
  <alias
   match="^add kills (-?\d+) (.*)$"
   enabled="y"
   regexp="y"
   send_to="12"
   sequence="100"
  >
  <send>

killed_mobs = killed_mobs or {}  -- make mobs table

mob_name = "%2"  -- this mob's name (second wildcard)

-- add this mob if first time

killed_mobs [mob_name] = killed_mobs [mob_name] or { count = 0 }

-- add to count of mobs (first wildcard)
killed_mobs [mob_name].count = killed_mobs [mob_name].count + %1

-- remember when we last killed it
killed_mobs [mob_name].last_time = os.time ()

Note (string.format ('Added kill of %1 x "%2" to mob count (total now %%d).',
      killed_mobs [mob_name].count))

</send>
  </alias>
</aliases>

<!--  Script  -->


<script>
<![CDATA[

-- on plugin install, convert variable into Lua table
function OnPluginInstall ()
  require "serialize"  -- needed to serialize table to string
  killed_mobs = {}  -- ensure table exists, if not loaded from variable
  assert (loadstring (GetVariable ("killed_mobs") or "")) ()
end -- function OnPluginInstall

-- on saving state, convert Lua table back into string variable
function OnPluginSaveState ()
  SetVariable ("killed_mobs", "killed_mobs = " ..
               serialize.save_simple (killed_mobs))
end -- function OnPluginSaveState
]]>
</script>


<!--  Plugin help  -->

<aliases>
  <alias
   script="OnHelp"
   match="Count_Mobs_Killed:help"
   enabled="y"
  >
  </alias>
</aliases>

<script>
<![CDATA[
function OnHelp ()
  world.Note (world.GetPluginInfo (world.GetPluginID (), 3))
end
]]>
</script> 

</muclient>