<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<!-- Saved on Thursday, February 14, 2019, 9:15 AM -->
<!-- MuClient version 5.06-pre -->

<!-- Plugin "AA_Dmon_Waypoint" generated by Plugin Wizard -->

<muclient>
<plugin
   name="DemonMUSH_Waypoints"
   author="Soth"
   id="c35fc9ff85f3e1402bfd9cfa"
   language="Lua"
   purpose="Automatically bridge to waypoints in the game Alter Aeon"
   date_written="2019-02-12 03:57:42"
   requires="4.92"
   save_state = "y"
   version="1.9"
   >

</plugin>


<!--  Get our standard constants -->

<include name="constants.lua"/>

<!--  Triggers  -->

<triggers>

  <trigger
   enabled="y"
   match="kxwt_rvnum * * * * * * *"
   send_to="12"
   sequence="100"
  >
  <send>roomVnum = %1
		playerAtWaypoint = false
		if next(waypointsIndex) ~= nil then
			for k, v in pairs (waypointsIndex) do
				if roomVnum == waypointsIndex[k]["vnum"] then
					roomShort = waypointsIndex[k]["rshort"]
					if roomShort ~= nil then
						s = string.lower(roomShort)
						for i in string.gmatch(s, destination) do
							setWaypoint = false
							if deployed == true then
								deployed = false
								playerArrived = true
							end
							EnableTimer("update",false)
						end
					end
				end
			end
		end</send></trigger>
  <trigger
   enabled="y"
   match="kxwt_rshort *"
   omit_from_output="n"
   send_to="12"
   sequence="100"
  >
  <send>roomShortKXWT = "%1"</send></trigger>
  <trigger
   enabled="y"
   match="kxwt_waypoint"
   omit_from_output="n"
   send_to="12"
   sequence="100"
  >
  <send>playerAtWaypoint = true
		roomShort = roomShortKXWT
		if roomShort ~= clanWaypoint and roomShort ~= "Central Bulletin Board Hall" then
			for k, v in pairs (waypointsIndex) do
				if roomVnum == waypointsIndex[k]["vnum"]  then
					lastWaypoint = waypointsIndex[k]["rshort"]
				end
			end
		end</send></trigger>
  <trigger
   enabled="y"
   match="kxwt_supported"
   omit_from_output="y"
   sequence="100"
   send_to="12"
  >
  <send>--playerLoggedIn = true
		</send></trigger>
  <trigger
   enabled="n"
   match="kxwt_walkdir *"
   omit_from_output="y"
   sequence="100"
   send_to="12"
  >
  <send>if playerAtWaypoint == false then
			deployed = false
			if next(waypointsData) == nil then
				checkWaypoints = true
				destination = "null"
				setTargetWaypoint = "null"
				--EnableTimer("update", true)
			end
		end</send></trigger>
  <trigger
   enabled="y"
   match="^\*abort\*$"
   omit_from_output="n"
   regexp="y"
   sequence="100"
   send_to="12"
  >
  <send>destination = "null"
		setTargetWaypoint = "null"
		EnableTimer("update", false)
		if deployed == true then
			deployed = false
			redPrint("Auto-waypoint bridging has been manually aborted.")
		end</send></trigger>
  <trigger
   enabled="y"
   match="alwp*"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>s = "%1"
		if s ~= "  # -> Destination" and s ~= "------------------------------------------------------------" then
			if s ~= "To use a waypoint, give its number, for example 'waypoint 3'." then
				if string.len(s) ~= 0 then
					table.insert(waypointsData, s)
				end
			end
		end</send></trigger>
  <trigger
   enabled="y"
   match="whxi*"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>s = "%1"
		for i in string.gmatch(s, "clan") do
			playerClanned = true
			setClanWaypoint = true
		end</send></trigger>
  <trigger
   enabled="y"
   match="You must be at a waypoint to reach another waypoint."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setWaypoint = false
		EnableTimer("update",false)
		bluePrint("You must be at a waypoint to reach another waypoint.")</send></trigger>
  <trigger
   enabled="y"
   match="You are too exhausted."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setWaypoint = false
		EnableTimer("update",false)
		if deployed == true then 
			bluePrint("You are too exhausted to waypoint.")
		else
			silverPrint("You are too exhausted.")
		end</send></trigger>
  <trigger
   enabled="y"
   match="(You can use waypoint * to bridge the distance.)"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setTargetWaypoint = "%1"
		EnableTimer("update",true)
		ResetTimer("update")
		setWaypoint = true
		bridgeFound = true
		if filterWaypoints == false then
			bluePrint("(You can use waypoint %1 to bridge the distance.)")
		end</send></trigger>
  <trigger
   enabled="y"
   match="(You may be able to use waypoint * to more easily bridge the distance.)"
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setTargetWaypoint = "%1"
		EnableTimer("update",true)
		ResetTimer("update")
		setWaypoint = true
		bridgeFound = true
		if filterWaypoints == false then
			bluePrint("(You may be able to use waypoint %1 to more easily bridge the distance.)")
		end</send></trigger>
  <trigger
   enabled="y"
   match="The other waypoint is too far away, and you are unable to link up with it.  Better try again."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setWaypoint = true
		setTargetWaypoint = destination
		if deployed == false then
			checkBridges = true
			Execute("demon way noBridge")
		end
		if filterWaypoints == false then
			bluePrint("The other waypoint is too far away, and you are unable to link up with it.  Better try again.")
		end</send></trigger>
  <trigger
   enabled="y"
   match="You are surrounded by a flickering blue glow.  When it fades, you find yourself elsewhere..."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>setTargetWaypoint = destination
		setWaypoint = true
		bridgeFound = false
			if customTheme == true then
				cPrint(setCustomColour1, setCustomColour2, "You are surrounded by a flickering blue glow.  When it fades, you find yourself elsewhere...") 
			else
				bluePrint("You are surrounded by a flickering blue glow.  When it fades, you find yourself elsewhere...") 
			end</send></trigger>
  <trigger
   enabled="y"
   match="The distance is too great for this waypoint to bridge the gap."
   omit_from_output="y"
   send_to="12"
   sequence="100"
  >
  <send>
		checkBridges = true
		Execute("demon way noBridge")</send></trigger>
  <trigger
   enabled="y"
   match="[Exits: * ]"
   omit_from_output="n"
   sequence="100"
   send_to="12"
  >
  <send>if playerArrived == true then
			playerArrived = false
			if next(waypointsList) ~= nil then
				if customTheme == true then
					print("")
					cPrint(setCustomColour1, setCustomColour2, "You have arrived at waypoint '"..originalDestination.."'.")
				else
					print("")
					bluePrint("You have arrived at waypoint '"..originalDestination.."'.")
				end
			end	
		end</send></trigger>
  <trigger
   enabled="y"
   match="[Exits: * ] [Doors: * ]"
   omit_from_output="n"
   sequence="100"
   send_to="12"
  >
  <send>if playerArrived == true then
			playerArrived = false
			if next(waypointsList) ~= nil then
				if customTheme == true then
					print("")
					cPrint(setCustomColour1, setCustomColour2, "You have arrived at waypoint '"..originalDestination.."'.")
				else
					print("")
					bluePrint("You have arrived at waypoint '"..originalDestination.."'.")
				end
			end	
		end</send></trigger>
</triggers>

<!--  Timers  -->

<timers>
  <timer name="init" enabled="y" second="1.00" offset_second="0.00" send_to="12">
	  <send>if init == true then
				init = false
				DoAfterSpecial(1, "EnableTimer('update', true)", sendto.script)
			end</send></timer>
  <timer name="update" enabled="n" second="1.00" offset_second="0.00" send_to="12">
	  <send>if playerLoggedIn == false and roomShortKXWT ~= "null" then
				playerLoggedIn = true
			end
			if playerLoggedIn == true and setClanWaypoint == true  and configuredWhoAmI == true then
				setClanWaypoint = false
				if GetVariable("clanWaypointSave") ~= nil and GetVariable("clanWaypointSave") ~= "null" then
					clanWaypoint = GetVariable("clanWaypointSave")
					waypointsMaster[GetVariable("clanWaypointSave")] = -1
					setClanWaypoint = false
					playerWarn = false
					clanWaypointData = {
						["number"] = -1,
						["insult"] = "unknown",
						["rshort"] = GetVariable("clanWaypointSave"),
						["vnum"] = roomVnum,
						["bridge"] = "unknown"
					}
					table.insert(waypointsIndex, clanWaypointData)
					print("")
					bluePrint("Auto-waypoint bridging has been configured.")
					bluePrint("Type 'demon way check' to see if you are missing any waypoints in your personal waypoint list.")
					Send "waypoints all |prefix alwp"
					waypointsData = {}
					DoAfterSpecial(1,"if bridgeFound == false then Execute 'demon way setTable' end -- if",sendto.script)
				end
			end
			if playerLoggedIn == true then
				if roomShort == clanWaypoint and destination ~= "null" and setTargetWaypoint == nil then
					setTargetWaypoint = destination
					SetVariable("targetWaypoint",setTargetWaypoint)
					--redPrint("***CHECK> clanWaypoint> timer> setTargetWaypoint was nil")
				end
				if roomShortKXWT == "Central Bulletin Board Hall" and destination ~= "null" and setTargetWaypoint == nil then
					setTargetWaypoint = destination
					SetVariable("targetWaypoint",setTargetWaypoint)
					--redPrint("***CHECK> way 99> timer> setTargetWaypoint was nil")
				end
				if roomShort == "Central Bulletin Board Hall" then
					if lastWaypoint ~= "null" then
						for k, v in pairs (waypointsIndex) do
							if lastWaypoint == waypointsIndex[k]["rshort"] then
								lwp = waypointsIndex[k]["number"]
							end
						end
					end
				end
				if playerClanned == true and setClanWaypoint == false then
					if roomShort == clanWaypoint then
						if lastWaypoint ~= "null" then
							for k, v in pairs (waypointsIndex) do
								if lastWaypoint == waypointsIndex[k]["rshort"] then
									lwp = waypointsIndex[k]["number"]
								end
							end
						end
					end
				end
				if setWaypoint == true then
					setWaypoint = false
					if deployed == false then
						deployed = true
						if setClanWaypoint == false then
							if customTheme == true then
								print("")
								cPrint(setCustomColour1, setCustomColour2, "A demonic force guides you to your waypoint...")
							else
								print("")
								bluePrint("A demonic force guides you to your waypoint...")
							end
						end
					end
					if setTargetWaypoint ~= nil then
						if lwp ~= nil and lwp ~= "null" then
							setTargetWaypoint = lwp
							lwp = "null"
						end
						SetVariable("targetWaypoint",setTargetWaypoint)
						Send("waypoint "..GetVariable "targetWaypoint")
					end
				end
				if playerClanned == true and clanWaypoint == "clanWaypoint" then
					setClanWaypoint = true
					if playerWarn == true then
						playerWarn = false
						print("")
						bluePrint("Auto-waypoint bridging needs to be configured. Please go to your clan waypoint ")
						bluePrint(" and type 'demon way clan' as soon as possible.")
					end
				end
				if setWhoAmI == false and configuredWhoAmI == true and setClanWaypoint == false then
					if playerClanned == false then
						if playerWarn == true then
							playerWarn = false
							print("")
							DoAfterSpecial(1,"if configuredWhoAmI == true then bluePrint('Auto-waypoint bridging has been configured.') end", sendto.script)
							DoAfterSpecial(1,"if configuredWhoAmI == true then bluePrint('Type demon way check to see if you are missing any waypoints in your personal waypoint list') end", sendto.script)
							if next(waypointsList) == nil then
								waypointsData = {}
								DoAfterSpecial(1,"if configuredWhoAmI == true and bridgeFound == false then Execute 'demon way setTable' end", sendto.script)
								DoAfterSpecial(1,"if configuredWhoAmI == true then Send 'waypoints all |prefix alwp' end", sendto.script)
							end
						end
						
					end
				end
				if setWhoAmI == true then
					configuredWhoAmI = true
					setWhoAmI = false
					Send "whoami |prefix whxi"
					if roomShortKXWT == nil then
						Send "look"
					end
					playerWarn = true
				end
			end</send></timer>
			
  <timer name="playerWarn" enabled="y" minute="2" second="0.00" offset_second="0.00" send_to="12">
	  <send>if setClanWaypoint == true and clanWaypoint == "clanWaypoint" then
				print("")
				bluePrint("Auto-waypoint bridging needs to be configured. Please go to your clan waypoint ")
				bluePrint("and type 'demon way clan'. as soon as possible.")
			else
				EnableTimer("playerWarn", false)
			end
	  </send></timer>
</timers>

<!--  Aliases  -->

<aliases>
  <alias
   match="way *"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>check = "%1"
		Send "way %1"
		destination = "%1"
		originalDestination = "%1"
		if lastWaypoint == clanWaypoint or lastWaypoint == "null" or lastWaypoint == nil then
			setTargetWaypoint = "null"
			print("")
			DoAfterSpecial(2, "if setTargetWaypoint == 'null' then redPrint('In order to reach waypoints with no bridges from clan or way 99, you must waypoint in and out at least once.') end", sendto.script)
		end
		if tonumber(destination) ~= nil then
			if next(waypointsList) ~= nil then
				for k, v in pairs (waypointsIndex) do
					if tonumber(destination) == waypointsIndex[k]["number"] then
						destination = waypointsIndex[k]["insult"]
					end
				end
			end
		end
		</send></alias>
  <alias
   match="demon way *"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1" == "noBridge" then
			roomShort = roomShortKXWT
			if checkBridges == true then
				checkBridges = false
				for k, v in pairs (waypointsIndex) do
					if roomVnum == waypointsIndex[k]["vnum"]  then
						s = waypointsIndex[k]["bridge"]
						for x, y in pairs (waypointsNewbIsland) do
							if y == destination then
								s = "unknown"
							end
						end
						if roomShort == "Central Bulletin Board Hall" then
								if lastWaypoint ~= "null" then
									for k, v in pairs (waypointsIndex) do
										if lastWaypoint == waypointsIndex[k]["rshort"] then
											s = waypointsIndex[k]["number"]
										end
									end
								end
							end
						if playerClanned == true and setClanWaypoint == false then
							if roomShort == clanWaypoint then
								if lastWaypoint ~= "null" then
									for k, v in pairs (waypointsIndex) do
										if lastWaypoint == waypointsIndex[k]["rshort"] then
											s = waypointsIndex[k]["number"]
										end
									end
								end
							end
						end
						if s ~= "unknown" then
							setTargetWaypoint = s
							setWaypoint = true
						end
					end
				end
				if setWaypoint == true then
					EnableTimer("update",true)
					ResetTimer("update")
				end
			else
				redPrint("checkBridges was false")
			end
		end
		
		if "%1" == "setTable" then
			if configuredTables == false then
				configuredTables = true
				for k, v in pairs (waypointsData) do
					for x, y in pairs (waypointsMaster) do
						for i in string.gmatch(v, x) do
							v = i
							waypointsMaster[v] = k
							table.insert(waypointsList, v)
						end
					end
				end
				for k, v in pairs (waypointsMaster) do
					for x, y in pairs (waypointsIndex) do
						if k == x then
							waypointsIndex[k]["number"] = v
						end
						if v == x then
							waypointsIndex[1]["number"] = v
						end
					end
				end
				for k, v in pairs (waypointsMaster) do
					for x, y in pairs (waypointsIndex) do
						if x ~= 1 then
							if v == waypointsIndex[x]["number"] then
								waypointsIndex[k]["rshort"] = k
							end
						end
					end
				end
			end
			waypointsIndex["Central Bulletin Board Hall"]["number"] = 99
		end
		if "%1" == "clan" then
			if setClanWaypoint == true and playerAtWaypoint == true then
				for k, v in pairs(waypointsMaster) do
						if roomShortKXWT == k then
							roomShortKXWT = "null"
							wrongClan = k
						end
					end
				if roomShortKXWT ~= "null" then
					clanWaypoint = roomShortKXWT
					SetVariable("clanWaypointSave", clanWaypoint)
					SetVariable("loadSaveState", "clan")
					CWP = GetVariable("clanWaypointSave")
					print("")
					--bluePrint(CWP.." was saved as your clan waypoint.")
					clanWaypoint = roomShortKXWT
					if clanWaypoint ~= "clanWaypoint" then
						waypointsMaster[clanWaypoint] = -1
						setClanWaypoint = false
						clanWaypointData = {
								["number"] = -1,
								["insult"] = "unknown",
								["rshort"] = clanWaypoint,
								["vnum"] = roomVnum,
								["bridge"] = "unknown"
						}
						table.insert(waypointsIndex, clanWaypointData)
						print("")
						bluePrint("Auto-waypoint bridging has been configured.")
						bluePrint("Type 'demon way check' to see if you are missing any waypoints in your personal waypoint list.")
						Send "waypoints all |prefix alwp"
						DoAfterSpecial(1,"if bridgeFound == false then Execute 'demon way setTable' end -- if",sendto.script)
						DoAfterSpecial(3, "SaveState()",sendto.script)
					end
				else
					bluePrint("This is "..wrongClan.."... not your clan waypoint.")
				end
			else
				print("")
				if next(clanWaypointData) == nil then
					bluePrint("You must be inside your clan waypoint for 'demon way clan' to configure properly.")
				else
					bluePrint("Clan waypoint already set.")
				end
			end
			
		end
		
		if "%1" == "table" or "%1" == "tables" then
			redPrint("| waypointsData |")
			tprint(waypointsData)
			redPrint("| waypointsList |")
			tprint(waypointsList)
			redPrint("| waypointsIndex |")
			tprint(waypointsIndex)
		end
		
		if "%1" == "clear" then
			clanWaypoint = "clanWaypoint"
			SetVariable("clanWaypointSave","null")
			SetVariable("loadSaveState", "null")
		end
		
		if "%1" == "check" then
			if next(waypointsList) ~= nil then
				print("")
				bluePrint("The following waypoints are missing from your list:")
				print("")
				for k, v in pairs (waypointsMaster) do
					if v == -1 then
						bluePrint(k)
					end
				end
			else
				if setClanWaypoint == true then
					bluePrint("Your clan waypoint needs to be configured in order for auto-waypoint bridging to function properly.")
					bluePrint("(Please go to your clan waypoint and type 'demon way clan' as soon as possible.)")
				else
					bluePrint("Please exit the waypoint to complete auto-waypoint bridging configuration.")
				end
			end
			
		elseif "%1" == "filter" then
			if filterWaypoints == false then
				filterWaypoints = true
				if customTheme == true then
					cPrint(color1, color2, "Waypointing spam filter has been enabled.")
				else
					bluePrint("Waypointing spam filter has been enabled.")
				end
			else
				filterWaypoints = false
				if customTheme == true then
					cPrint(color1, color2, "Waypointing spam filter has been disabled.")
				else
					bluePrint("Waypointing spam filter has been disabled.")
				end
			end
			
		elseif "%1" == "about" then
			print("")
			bluePrint("About Demon Waypoint")
			sapphirePrint(" Version: "..currentVersion)
			sapphirePrint(" Author: Soth")
			sapphirePrint(" Testing: Demon and Rashid")
			sapphirePrint(" Special thanks to Lokar, Colonel, Rashid, Samaell, and Haze for their assistance in completing the master waypoint list.")
			
			
		elseif "%1" == "help" then
			bluePrint("Demon Waypoint Manual")
			print("")
			bluePrint("Main Commands:")
			sapphirePrint(" demon way help - Shows this help file")
			sapphirePrint(" demon way clan - If player is inside clan waypoint, this sets current room as the clan waypoint.")
			sapphirePrint(" demon way check - Checks for missing waypoints in your personal waypoints list.")
			sapphirePrint(" demon way clear - Clears clan waypoint and it's save variable (in case of clanset)")
			sapphirePrint(" abort - Manually shuts down auto-waypoint bridging")
			
			print("")
			bluePrint("Miscellaneous Commands:")
			sapphirePrint(" demon way about - Shows current Demon Waypoint version.")
			sapphirePrint(" demon way filter - Toggles waypoint spam filter (ie. You can use waypoint 3 to ")
			sapphirePrint("  more easily bridge the distance)")
			
			sapphirePrint(" demon way tables - Warning: Spammy command used mainly for debugging.")
			sapphirePrint(" cv way - Warning: Spammy command used to check variables")
			
			print("")
			bluePrint("Important Notice:")
			--			  ^                                                                                ^
			sapphirePrint(" This plugin only works for mainland waypoints. Please do not attempt to ")
			sapphirePrint("  waypoint from the mainland to Newbie Islands, as bugs may occur.")
			sapphirePrint(" Demon Waypoint may not function properly if one of the following is true:")
			sapphirePrint("  Your Kxwt is turned off. If this is the case, simply type 'set kxwt on'.")
			sapphirePrint("  Your personal waypoint list is not in perfect numerical order, without any ")
			sapphirePrint("   gaps. Type 'waypoint reorder' to learn more about how to fix this problem.")
			sapphirePrint("  Your personal waypoint list contains newbie island waypoints other than Dragon")
			sapphirePrint("   Tooth, Highly Unusual, Gad's Landing, Seaside Village, or Naphtali Chapel.")
			
			print("")
			bluePrint("Additional Notes:")
			sapphirePrint(" If something is wrong, try reinstalling Demon Waypoint. (File > Plugins)")
			sapphirePrint(" If you are still having trouble, please send a tell or mudmail to Soth, or ask")
			sapphirePrint("  on the tech channel. (type 'channel connect tech')")
			
			print("")
			bluePrint("Disclaimer:")
			sapphirePrint(" Use this program at your own risk!")
			sapphirePrint(" Demon Waypoint is not intended for lower level players and probably will not ")
			sapphirePrint("  function properly for them due to unaccounted for waypoints on the islands.")
			sapphirePrint("  This will change in the future.")
		end</send></alias>
  <alias
   match="theme * * *"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1" == "way" or userInput == "waypoint" or userInput == "waypoints" then
			setCustomColour1 = "%2"
			setCustomColour2 = "%3"
			customTheme = true
			print("")
			cPrint(setCustomColour1, setCustomColour2, "Your new waypoint theme has been set.")
		end</send></alias>
  <alias
   match="colo*"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>if "%1" == "rs" or "%1" == "urs" then
			Debug("colours")
		end</send></alias>	
  <alias
   match="cv way"
   enabled="y"
   send_to="12"
   ignore_case="y"
   sequence="100"
  >
  <send>purplePrint("***^._.^*** | Demon WAYPOINT ANALYSIS: -------------------- | ***^._.^***")
		print("            | deployed            :          ",deployed)
		print("            | loadSaveState       :          ",GetVariable("loadSaveState"))
		print("            | playerLoggedIn      :          ",playerLoggedIn)
		print("            | setWhoAmI           :          ",setWhoAmI)
		print("            | playerWarn          :          ",playerWarn)
		print("            | playerClanned       :          ",playerClanned)
		print("            | playerAtWaypoint    :          ",playerAtWaypoint)
		print("            | playerArrived       :          ",playerArrived)
		print("            | configuredTables    :          ",configuredTables)
		print("            | roomShortKXWT       :          ",roomShortKXWT)
		print("            | roomShort           :          ",roomShort)
		print("            | roomVnum            :          ",roomVnum)
		print("            | lastWaypoint        :          ",lastWaypoint)
		print("            | setClanWaypoint     :          ",setClanWaypoint)
		print("            | clanWaypoint        :          ",clanWaypoint)
		print("            | originalDestination :          ",originalDestination)
		print("            | destination         :          ",destination)
		print("            | setTargetWaypoint   :          ",setTargetWaypoint)
		print("            | setWaypoint         :          ",setWaypoint)
		print("            | checkWaypoints      :          ",checkWaypoints)
		print("            | checkBridges        :          ",checkBridges)
		print("            | bridgeFound         :          ",bridgeFound)
		print("            | customTheme         :          ",customTheme)
		print("            | setCustomColour1    :          ",setCustomColour1)
		print("            | setCustomColour2    :          ",setCustomColour2)
		print("            | filterWaypoints     :          ",filterWaypoints)
		purplePrint("***^._.^*** | --------------------------------------------- | ***^._.^***")</send></alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[
----------------------------------------------------------------------------------------
-- Functions
----------------------------------------------------------------------------------------
	function OnPluginInstall()
		ColourNote("white", "indigo", "Demon Waypoints "..currentVersion.." has been installed. Type 'demon way help' to learn more.")
		
	end
	function redPrint(msg) 
		ColourNote("#B22222","black",msg) -- red and black
	end
	function bluePrint(msg) 
		ColourNote("cornflowerblue","darkblue",msg) -- cornflowerblue and dark blue
	end
	function sapphirePrint(msg) 
		ColourNote("cornflowerblue","black",msg) -- cornflowerblue and black
	end
	function silverPrint(msg)
		ColourNote("silver","black",msg) -- silver and black
		return
	end
	function ghostPrint(msg)
		ColourNote("ghostwhite","black",msg) -- ghostwhite and black
		return
	end
	function purplePrint(msg)
		ColourNote("ghostwhite","indigo",msg) -- ghostwhite and indigo
		return
	end
	function cPrint(colour1, colour2, msg)
		ColourNote(colour1, colour2, msg)
		return
	end
	
----------------------------------------------------------------------------------------
-- Global Variables
----------------------------------------------------------------------------------------
	require "tprint"
	currentVersion = "1.9"
	
	clanWaypoint = "clanWaypoint"
	clanInsult = "null"
	clanVnum = -1
	roomShort = "null"
	roomShortKXWT = "null"
	roomVnum = "null"
	lastWaypoint = "null"
	originalDestination = "null"
	destination = "null"
	setTargetWaypoint = "null"
	setCustomColour1 = "null"
	setCustomColour2 = "null"
	
	init = true
	deployed = false
	setWhoAmI = true
	playerLoggedIn = false
	playerWarn = false
	playerClanned = false
	playerAtWaypoint = false
	playerArrived = false
	configuredTables = false
	configuredWhoAmI = false
	setWaypoint = false
	setClanWaypoint = false
	checkWaypoints = false
	checkBridges = false
	bridgeFound = false
	customTheme = false
	filterWaypoints = true

	
----------------------------------------------------------------------------------------
-- Tables
----------------------------------------------------------------------------------------	
	waypointsData = {}
	waypointsList = {}
	clanWaypointData = {}
	
	waypointsMaster = {
		["On the steps of Aomizu Temple"] = -1,
		["Central Bulletin Board Hall"] = -1,
		["The Unholy Temple of Dentin"] = -1,
		["Before a massive oak tree."] = -1,
		["Glade of spirits"] = -1,
		["Inside a small deserted chapel"] = -1,
		["The Fire Tower, third floor"] = -1,
		["The Temple of Zin"] = -1,
		["A shrine to Dentin"] = -1,
		["Atop a small knoll"] = -1,
		["The Marikest Temple Waypoint"] = -1,
		["A church of Shift"] = -1,
		["The Temple of Night"] = -1,
		["Wallachia City Inn Dormitory"] = -1,
		["A tall room in the fortress of Koralia's Heart"] = -1,
		["A vine covered temple"] = -1,
		["City of Airam, Town Square"] = -1,
		["The Center of Vandar"] = -1,
		["The Naginag Chapel Porch"] = -1,
		["The temple of the Summer Sun in the city of Finspang"] = -1,
		["The Wellinghall Waypoint"] = -1,
		["The city square of Elborat"] = -1,
		["A small meditation room"] = -1,
		["The Temple of Stillness in Gad's Landing"] = -1,
		["Before five ancient statues"] = -1,
		["A large blackened waypoint"] = -1,
		["The Blue Temple"] = -1,
		["Ritterholm Central Courtyard"] = -1,
		["A stone tower"] = -1,
		["A small campfire in the woods."] = -1,
		["The Society of Succor"] = -1,
		["Central square of Dorna"] = -1,
		["A shrine to Shadowfax"] = -1,
		["The Blessed Garden of the Amagawa Spirits"] = -1,
		["Ostiary Occidental Recall Site"] = -1,
		["The Onsen Haiden"] = -1,
		["The Cathedral in the Temple of Dentin"] = -1,
		["Overlooking a small lake high in the Ash mountains"] = -1,
		["Inside a long log building."] = -1,
		["The Dragon Tooth Waypoint"] = -1,
		["A highly unusual waypoint"] = -1,
		["The Accepted Chapel of Dentin in Naphtali"] = -1,
		["The Seaside village square"] = -1,
		["Crossing the Brom Bridge"] = -1
	}
	
	waypointsNewbIsland = {
		[1] = "dr",
		[2] = "dra",
		[3] = "drag",
		[4] = "drago",
		[5] = "dragon",
		[6] = "too",
		[7] = "toot",
		[8] = "tooth",
		[9] = "sea",
		[10] = "seas",
		[11] = "seasi",
		[12] = "seasid",
		[13] = "seaside",
		[14] = "vil",
		[15] = "vill",
		[16] = "villa",
		[17] = "villag",
		[18] = "village",
		[19] = "sti",
		[20] = "stil",
		[21] = "still",
		[22] = "stilln",
		[23] = "stillne",
		[24] = "stillnes",
		[25] = "stillness",
		[26] = "gad",
		[27] = "lan",
		[28] = "land",
		[29] = "landi",
		[30] = "landin",
		[31] = "landing",
		[32] = "ac",
		[33] = "acc",
		[34] = "acce",
		[35] = "accep",
		[36] = "accept",
		[37] = "accepte",
		[38] = "accepted",
		[39] = "nap",
		[40] = "naph",
		[41] = "napht",
		[42] = "naphta",
		[43] = "naphtal",
		[44] = "naphtali",
		[45] = "hi",
		[46] = "hig",
		[47] = "high",
		[48] = "highl",
		[49] = "highly",
		[50] = "un",
		[51] = "unu",
		[52] = "unus",
		[53] = "unusu",
		[54] = "unusua",
		[55] = "unusual",
	}
	
	waypointsIndex = {
		["Central Bulletin Board Hall"] = {
			["insult"] = "bulletin",
			["vnum"] = 1395,
			["bridge"] = "unknown", 
			["mainland"] = true
		},
		["The Unholy Temple of Dentin"] = {
			["insult"] = "unholy",
			["vnum"] = 0,
			["bridge"] = "elborat", 
			["mainland"] = true
		},
		["The Cathedral in the Temple of Dentin"] = {
			["insult"] = "cathedral",
			["vnum"] = 1,
			["bridge"] = "elborat", 
			["mainland"] = true
		},
		["Inside a long log building."] = {
			["insult"] = "log",
			["vnum"] = 7394,
			["bridge"] = "elborat", 
			["mainland"] = true
		},
		["The Naginag Chapel Porch"] = {
			["insult"] = "porch",
			["vnum"] = 47675,
			["bridge"] = "zin", 
			["mainland"] = true
		},
		["The Temple of Zin"] = {
			["insult"] = "zin",
			["vnum"] = 39916,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["On the steps of Aomizu Temple"] = {
			["insult"] = "aomizu",
			["vnum"] = 5133,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The temple of the Summer Sun in the city of Finspang"] = {
			["insult"] = "summer",
			["vnum"] = 58114,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Before a massive oak tree."] = {
			["insult"] = "oak",
			["vnum"] = 33703,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Glade of spirits"] = {
			["insult"] = "glade",
			["vnum"] = 3339,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Inside a small deserted chapel"] = {
			["insult"] = "deserted",
			["vnum"] = 928,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Fire Tower, third floor"] = {
			["insult"] = "fire",
			["vnum"] = 37343,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A shrine to Dentin"] = {
			["insult"] = "shrine",
			["vnum"] = 34340,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Atop a small knoll"] = {
			["insult"] = "knoll",
			["vnum"] = 60678,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Marikest Temple Waypoint"] = {
			["insult"] = "marikest",
			["vnum"] = 8483,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A church of Shift"] = {
			["insult"] = "shift",
			["vnum"] = 37499,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Temple of Night"] = {
			["insult"] = "night",
			["vnum"] = 40730,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A tall room in the fortress of Koralia's Heart"] = {
			["insult"] = "koralia",
			["vnum"] = 62643,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A vine covered temple"] = {
			["insult"] = "vine",
			["vnum"] = 14599,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["City of Airam, Town Square"] = {
			["insult"] = "airam",
			["vnum"] = 45315,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Center of Vandar"] = {
			["insult"] = "vandar",
			["vnum"] = 33830,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Wellinghall Waypoint"] = {
			["insult"] = "wellinghall",
			["vnum"] = 18497,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The city square of Elborat"] = {
			["insult"] = "elborat",
			["vnum"] = 10654,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A small meditation room"] = {
			["insult"] = "meditation",
			["vnum"] = 17723,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Before five ancient statues"] = {
			["insult"] = "five",
			["vnum"] = 16233,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A large blackened waypoint"] = {
			["insult"] = "blackened",
			["vnum"] = 1311,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Blue Temple"] = {
			["insult"] = "blue",
			["vnum"] = 7864,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Ritterholm Central Courtyard"] = {
			["insult"] = "ritterholm",
			["vnum"] = 14316,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A stone tower"] = {
			["insult"] = "stone",
			["vnum"] = 45595,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A small campfire in the woods."] = {
			["insult"] = "campfire",
			["vnum"] = 1028,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Society of Succor"] = {
			["insult"] = "succor",
			["vnum"] = 11151,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Central square of Dorna"] = {
			["insult"] = "dorna",
			["vnum"] = 51536,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["A shrine to Shadowfax"] = {
			["insult"] = "shadowfax",
			["vnum"] = 21635,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Blessed Garden of the Amagawa Spirits"] = {
			["insult"] = "amagawa",
			["vnum"] = 37938,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Onsen Haiden"] = {
			["insult"] = "onsen",
			["vnum"] = 49879,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["Overlooking a small lake high in the Ash mountains"] = {
			["insult"] = "ash",
			["vnum"] = 16245,
			["bridge"] = "unholy",
			["mainland"] = true
		},
		["The Dragon Tooth Waypoint"] = {
			["insult"] = "tooth",
			["vnum"] = 53708,
			["bridge"] = "unknown",
			["mainland"] = false
		},
		["A highly unusual waypoint"] = {
			["insult"] = "unusual",
			["vnum"] = 60209,
			["bridge"] = "unknown",
			["mainland"] = false
		},
		["The Seaside village square"] = {
			["insult"] = "seaside",
			["vnum"] = 19514,
			["bridge"] = "unknown",
			["mainland"] = false
		},
		["The Temple of Stillness in Gad's Landing"] = {
			["insult"] = "gad",
			["vnum"] = 53591,
			["bridge"] = "unknown",
			["mainland"] = false
		},
		["The Accepted Chapel of Dentin in Naphtali"] = {
			["insult"] = "naphtali",
			["vnum"] = 53428,
			["bridge"] = "unknown",
			["mainland"] = false
		},
		["Crossing the Brom Bridge"] = {		
			["insult"] = "brom",
			["vnum"] = 65032,
			["bridge"] = "unknown",
			["mainland"] = true
		},
		["Ostiary Occidental Recall Site"] = {
			["insult"] = "occidental",
			["vnum"] = 55999,
			["bridge"] = "unknown",
			["mainland"] = true
		},
		["Wallachia City Inn Dormitory"] = {
			["insult"] = "dormitory",
			["vnum"] = 48786,
			["bridge"] = "unknown",
			["mainland"] = true
		},
	}
	
----------------------------------------------------------------------------------------
-- Demon Craft Changelog
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
-- v1.0, 2/13/2019																	  --
-- Added all relevant triggers, timers, aliases as well as the script
-- Waypoint logic has been set for an update timer to send when the triggers and aliases
--  have rendered the proper commands and sequence
-- Added room short and implemented string.gmatch() to smartly stop trying to waypoint
--  when the target destination has been reached
-- Added filter to almost entirely omit waypointing and bridge spam
-- Update timer will now shut off when too exhausted to waypoint to avoid complications
-- Created a custom theme setting (theme way color1 color2)
-- Added a 'colors|colours' command that shows all mush client colors
-- Set up tables for waypoint data 
-- Manually inserted 'Entrance to Hell' waypoint into table until further notice
-- Made alias 'demon way check' to compare master waypoint list to player list and
--  print all missing waypoints
-- Use playerAtWaypoint variable to determine when to set up waypoint tables
-- 																					  --
-- v1.1, 2/14/2019																	  --
-- Created a nested dictionary to hold the master waypoint index and all pertinent data
-- Waypointing with numbers (ie. way 10) will now use the waypoint index to set the 
--  target waypoint to the corresponding insult in order to avoid number conflicts
-- Added notifies to player when bridging begins and upon waypoint arrival (Vivi)
-- Added notify for when waypoint data has been set
--  																				  --
-- v1.2, 2/15/2019																	  --
-- Add vnums to waypointsIndex table and base update logic on vnum rather than rshort
-- Added rshorts to waypointsIndex to match on values rather than nested indexes
-- Removed deprecated kxwt_short code
-- Changed default waypointing theme to cornflowerblue font with a darkblue background
-- Detect if waypointing on match "You are too exhausted" to print correct colors
-- Removed runTime timer and variable as there is no real use for it I can think of
-- Alias 'demon way table' now only shows waypointsList and waypointsIndex
-- Alias 'demon way check' now shows a warning if waypoint data is not set (Vivi)
--  																				  --
-- v1.3, 2/16/2019																	  --
-- Removed 'Entrance to Hell' from the waypointsIndex table
-- Added alias 'demon way clan' to set clan waypoint data tables
-- Compensated for clan waypoint (or lack thereof) in the waypoint tables
-- Changed player notifies for waypointing and general demon way usage
-- Help file added! Type 'demon way help' to learn more.
--  																				  --
-- v1.4, 2/19/2019																	  --
-- Added bridging capability even when there are none in range of the current waypoint
-- Severely restrict program interaction with newbie island waypoints (this should
--  prevent almost all bridge attempts from mainland to newbie islands)
-- Auto waypointing with no bridge found now works from clan recall as well (Vivi)
-- Warn players that a no-bridge waypoint from clan recall only works after you have 
--  waypointed in and out of clan recall at least once
-- Modified help file to try and better explain the do's and dont's of Demon Way
--  																				  --
-- v1.5, 2/23/2019																	  --
-- Added alias 'demon way filter' which toggles the waypoint spam filter
-- Simplified the configuration process (leaving recall is no longer necessary)
-- Corrected a few player notifies that were out of sequence
-- Disallowed setting a normal waypoint as clan waypoint and add a warning if attempted
-- Improved clan detection logic
-- Rolled back and reworked code from 2/22. Everything seems to be working as intended
--  																				  --
-- v1.6, 2/24/2019																	  --
-- Added save state functionality to automatically configure most things
-- Improved log in detection and prevented anything from running while logging
-- Changed the noBridge alias to go on room vnums rather than rshorts (bug fix: darken)
-- Added alias 'demon way about' to show version
-- Fixed waypoint table bug for non-clanned players caused by a double send in update 
--  																				  --
-- v1.7, 2/26/2019																	  --
-- Fixed a bug on waypoint failing to link up
--  																				  --
-- v1.8, 3/14/2019																	  --
-- Use "waypoints all" command to set up waypoints table without leaving recall
-- Filled in the missing vnums for waypointsIndex
-- Changed plugin install coloration to match the DemonMUSH theme
-- Set lastWaypoint with tables to prevent rshorts being set to "Somewhere very dark"
-- Added new timer 'init' to control the 'update' timer (for better sequencing)
--  																				  --
-- v1.9, 3/15/2019																	  --
-- Changed clanWaypointData vnum insertion from "null" to -1 (Vivi)
-- Added more safeguards against waypoint tables being set twice
-- Added "Central Bulletin Board Hall" (way 99) into waypointsIndex table
-- Fixed auto-waypoint functionality from way 99
-- Fixed deployed being true after exiting a waypoint (Vivi)
-- 																					  --																			  --
-- Coming soon																 	      --
-- Organize waypointsIndex to match the current user's waypoint list order
-- Account for all newbie island waypoints to enable usage of demon way by low to mid
--  level players
-- 																					  --
----------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------
]]>
</script>

</muclient>